package day9.com.ict.edu;

public class Ex01 {
	public static void main(String[] args) {
		// 배열 : 같은 자료형의 데이터들을 한 곳에 모아둔 묶음
		// [단점]	반드시 같은 자료형이어야 한다.(단, 프로모션/디모션 가능)
		//		생성할 때 반드시 크기를 지정해야 한다. > 안하면 오류!
		//		한 번 지정된 크기는 변경되지 않는다.
		// 배열 데이터를 추출할 때는 일반적으로 for문을 사용한다.
		
		// 배열 종류 : 1차원 배열과 다차원 배열 (배열 안에 배열이 존재)
		//			기본 자료형 배열과 참조 자료형 배열 (객체 배열)
		
		// 배열 생성 순서 : 선언 -> 생성 -> 초기화 (단, 선언은 한 번만)
		// 1) 선언 : 자료형[] 이름; 또는 자료형 이름[] ;
		int[] su;
		// 2) 생성 : 이름 = new 자료형[배열 크기_방의 수];
		//			new 예약어 : 메모리에 데이터를 저장할 공간을 만들어라
		//			=> 인스턴스, 객체 생성
		su = new int[4];
		
		// 3) 데이터 저장 : 이름[index=방 번호 = 위치 값 0부터]
		//				같은 자료형이어야만 저장 가능 (프로모션/디모션) 가능
		su[0]=100;
		su[1]='a'; // 프로모션 : int 보다 char가 커서 char가 들어가는게 가능하다.
		su[2]= (int)2.4; //>> 디모션 : 형 변환을 해야한다.
		su[3]= 124;
		// su[4]=14; // 입력 시엔 오류 X, 실행 시엔 오류남. > 런타임 오류
		su[0]=12; //> 현재 데이터를 삭제하고 가장 마지막에 저장된 12가 저장된다.
		
		
		// 배열을 호출하면 주소(생성ID)가 출력
		System.out.println(su);
		System.out.println(su[0]);
		System.out.println(su[1]);
		System.out.println(su[2]);
		System.out.println(su[3]);
		System.out.println("========================");
		
		// 배열의 출력은 일반적으로 for문 사용
		for (int i = 0; i < su.length; i++) { // index와 length는 1차이
			System.out.println(su[i]);
		}
		System.out.println("========================");
		
		// 개선된 for문 : 배열이나 컬렉션에 주로 사용
		//			   배열 전체에 대해서 정보 출력 및 가공 가능
		//			   그러나 특정 몇 개나 특정 하나를 별도로 출력하거나 가동할 수 없다.
		//			   인덱스 값을 이용할 수 없다.
		
		// : => 오른쪽 배열의 데이터를 하나씩 순서대로 왼쪽에 넘긴다.
		
		for(int k :su) {
			if(k>90)
			System.out.println(k*10);
			else
			System.out.println(k);
		}
		
		
		
		
		
		
		
		
		
	}
}
